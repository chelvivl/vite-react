import { useState } from 'react';
import { useBiblePlan } from './hooks/useBiblePlan';
import DayList from './components/DayList';
import Menu from './components/Menu';
import ToastNotification from './components/ToastNotification';
import CurrentDayButton from './components/CurrentDayButton';

import './App.css'; // –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ‚Äî —Å–æ–∑–¥–∞–π –µ–≥–æ

function App() {
  const {
    state,
    startDay,
    toggleDay,
    resetProgress,
    continueFromDay,
    completedCount,
  } = useBiblePlan();

  const [menuOpen, setMenuOpen] = useState(false);
  const [modalOpen, setModalOpen] = useState(false);
  const [toast, setToast] = useState({ show: false, message: '' });

const showToast = (message: string) => {
    setToast({ show: true, message });
    setTimeout(() => {
      setToast({ show: false, message: '' });
    }, 2500);
  };

const handleContinueFromDay = (day: number) => {
    continueFromDay(day);
    setModalOpen(false);
    showToast(`‚úÖ –î–µ–Ω—å ${day} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ —Å–µ–≥–æ–¥–Ω—è!`);
    setTimeout(() => {
      document.getElementById(`day-${day}`)?.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }, 300);
  };

  return (
    <>
      <button className="menu-button" onClick={() => setMenuOpen(!menuOpen)}>
        ‚ãØ
      </button>

      <h1>üìñ –ë–∏–±–ª–∏—è –∑–∞ 111 –¥–Ω–µ–π</h1>

      <div className="stats">
        –ü—Ä–æ–≥—Ä–µ—Å—Å: {completedCount} –∏–∑ {state.length}
      </div>

      <DayList
        state={state}
        startDay={startDay}
        onToggleDay={toggleDay}
      />

      <Menu
        open={menuOpen}
        onClose={() => setMenuOpen(false)}
        onReset={resetProgress}
        onContinue={() => setModalOpen(true)}
        showToast={showToast}
      />

      {modalOpen && (
        <div className="modal-overlay active">
          <div className="modal">
            <h3>üìñ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –¥–Ω—è...</h3>
            <p>–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –¥–Ω—è, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —á–∏—Ç–∞–µ—à—å <strong>—Å–µ–≥–æ–¥–Ω—è</strong><br /><small>–í—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–Ω–∏ –±—É–¥—É—Ç –æ—Ç–º–µ—á–µ–Ω—ã</small></p>
           <input
              type="number"
              id="day-input"
              min="1"
              max="111"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 33"
              onKeyDown={(e) => {
                if (e.key === 'Enter') {
                  const target = e.target as HTMLInputElement;
                  const day = parseInt(target.value);
                  if (isNaN(day) || day < 1 || day > 111) {
                    showToast('‚ùå –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è (1‚Äì111)');
                    return;
                  }
                  handleContinueFromDay(day);
                }
              }}
            />
            <div className="modal-buttons">
              <button className="modal-btn cancel" onClick={() => setModalOpen(false)}>
                –û—Ç–º–µ–Ω–∞
              </button>
          <button
          className="modal-btn confirm"
          onClick={() => {
            const input = document.getElementById('day-input') as HTMLInputElement | null;
            if (!input) {
              showToast('‚ùå –≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
              return;
            }
            const day = parseInt(input.value);
            if (isNaN(day) || day < 1 || day > 111) {
              showToast('‚ùå –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è (1‚Äì111)');
              return;
            }
            handleContinueFromDay(day);
          }}
        >
          –ü—Ä–∏–º–µ–Ω–∏—Ç—å
        </button>
            </div>
          </div>
        </div>
      )}

      <ToastNotification show={toast.show} message={toast.message} />

      <CurrentDayButton startDay={startDay} />
    </>
  );
}

export default App;